// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  password     String
  firstName    String
  lastName     String?
  email        String        @unique
  createdDate  DateTime      @default(now())
  applications Application[]
  paths        Path[]
  links        Link[]
  tags         Tag[]
  documents    Document[]
}

model Application {
  id              Int              @id @default(autoincrement())
  author          User             @relation(fields: [authorId], references: [id])
  authorId        Int
  path            Path             @relation(fields: [pathId], references: [id])
  pathId          Int
  title           String
  company         String
  location        String?
  description     String?
  status          String?
  notes           String?
  source          String
  sourceUrl       String?
  appliedDate     DateTime?
  rejectedDate    DateTime?
  offerDate       DateTime?
  postedDate      DateTime?
  dueDate         DateTime?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  applicationTags ApplicationTag[]
  Interview       Interview[]
}

model Interview {
  id            Int         @id @default(autoincrement())
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId Int
  interviewDate DateTime
  interviewType String
  interviewer   String?
  notes         String?
}

model Path {
  id           Int           @id @default(autoincrement())
  author       User          @relation(fields: [authorId], references: [id])
  authorId     Int
  name         String
  startDate    DateTime      @default(now())
  endDate      DateTime?
  status       String
  updatedAt    DateTime      @updatedAt
  applications Application[]
}

model Link {
  id        Int      @id @default(autoincrement())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  type      String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id              Int              @id @default(autoincrement())
  author          User             @relation(fields: [authorId], references: [id])
  authorId        Int
  name            String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  applicationTags ApplicationTag[]
  documentTags    DocumentTag[]
}

model Document {
  id           Int           @id @default(autoincrement())
  author       User          @relation(fields: [authorId], references: [id])
  authorId     Int
  name         String
  filePath     String
  docType      String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  documentTags DocumentTag[]
}

model ApplicationTag {
  id            Int         @id @default(autoincrement())
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId Int
  tag           Tag         @relation(fields: [tagId], references: [id])
  tagId         Int
}

model DocumentTag {
  id         Int      @id @default(autoincrement())
  document   Document @relation(fields: [documentId], references: [id])
  documentId Int
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      Int
}
